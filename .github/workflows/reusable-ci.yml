name: reusable-ci

on:
  workflow_call:
    inputs:
      sonar_project_key:
        required: false
        type: string
      sonar_organization:
        required: false
        type: string
      enable_sonar:
        required: false
        type: boolean
        default: false
      enable_jacoco:
        required: false
        type: boolean
        default: false

    secrets:
      SONAR_TOKEN:
        required: false

permissions:
  contents: read

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Tests
        run: mvn test
  
  quality-gate:
    if: ${{ inputs.enable_jacoco }}
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Valida cobertura de teste
        id: coverage
        run: |
          LINE_COVERAGE=$(xmllint --xpath "string(//report/counter[@type='LINE']/@covered)" target/site/jacoco/jacoco.xml)
          LINE_MISSED=$(xmllint --xpath "string(//report/counter[@type='LINE']/@missed)" target/site/jacoco/jacoco.xml)

          TOTAL=$((LINE_COVERAGE + LINE_MISSED))
          if [ "$TOTAL" -eq 0 ]; then
            echo "Nenhuma linha encontrada no relatório do JaCoCoNo. Falhou."
            exit 1
          fi

          PERCENT=$(( 100 * LINE_COVERAGE / TOTAL ))
          echo "Cobertura total de linhas: $PERCENT%"

          if [ "$PERCENT" -lt 70 ]; then
            echo "❌ Cobertura de código $PERCENT% é menor que o limite de (70%)"
            exit 1
          else
            echo "✅ Cobertura de código de $PERCENT% é aceitável"
          fi

  code-analysis:
    if: ${{ inputs.enable_sonar }}
    needs: quality-gate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Sonar & Maven
        uses: actions/cache@v4
        with:
          path: |
            ~/.sonar/cache
            ~/.m2
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Run Sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=${{ inputs.sonar_project_key }} \
            -Dsonar.organization=${{ inputs.sonar_organization }}
