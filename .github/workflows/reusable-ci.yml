name: reusable-ci

on:
  workflow_call:
    inputs:
      sonar_project_key:
        required: false
        type: string
      sonar_organization:
        required: false
        type: string
      enable_sonar:
        required: false
        type: boolean
        default: false
      enable_jacoco:
        required: false
        type: boolean
        default: false

    secrets:
      SONAR_TOKEN:
        required: false

permissions:
  contents: read

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Tests
        run: mvn test

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/jacoco.xml

  quality-gate:
    if: ${{ inputs.enable_jacoco }}
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Download JaCoCo report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: jacoco

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Validate test coverage
        run: |
          REPORT="jacoco/jacoco.xml"

          if [ ! -f "$REPORT" ]; then
            echo "❌ Coverage report not found at $REPORT"
            exit 1
          fi

          LINE_COVERED=$(xmllint --xpath "string(//report/counter[@type='LINE']/@covered)" "$REPORT")
          LINE_MISSED=$(xmllint --xpath "string(//report/counter[@type='LINE']/@missed)" "$REPORT")

          TOTAL=$((LINE_COVERED + LINE_MISSED))
          if [ "$TOTAL" -eq 0 ]; then
            echo "❌ No lines found in the JaCoCo report. Failing..."
            exit 1
          fi

          PERCENT=$(( 100 * LINE_COVERED / TOTAL ))
          echo "ℹ️ Total line coverage: $PERCENT%"

          if [ "$PERCENT" -lt 70 ]; then
            echo "❌ Code coverage is $PERCENT%, which is below the threshold of 70%"
            exit 1
          else
            echo

  code-analysis:
    if: ${{ inputs.enable_sonar }}
    needs: quality-gate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Sonar & Maven
        uses: actions/cache@v4
        with:
          path: |
            ~/.sonar/cache
            ~/.m2
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Run Sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=${{ inputs.sonar_project_key }} \
            -Dsonar.organization=${{ inputs.sonar_organization }}
