name: pipeline-deploy

on:
  workflow_call:
    inputs:
      sonar_project_key:
        required: true
        type: string
      sonar_organization:
        required: true
        type: string
      docker_image_tag:
        required: true
        type: string

    secrets:
      SONAR_TOKEN:
        required: true
      DOCKERHUB_USER:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      aws_assume_role_arn:
        required: true
      EKS_CLUSTER_NAME:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Run tests
        run: mvn test

  code-analysis:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Cache SonarCloud & Maven
        uses: actions/cache@v4
        with:
          path: |
            ~/.sonar/cache
            ~/.m2
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Build and Analyze with Sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=${{ inputs.sonar_project_key }} \
            -Dsonar.organization=${{ inputs.sonar_organization }}

  publish:
    needs: code-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6.15.0
        with:
          tags: ${{ inputs.docker_image_tag }}
          context: .
          push: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.aws_assume_role_arn }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region us-east-1

      - name: Apply K8s Resources
        run: kubectl apply -f k8s/
